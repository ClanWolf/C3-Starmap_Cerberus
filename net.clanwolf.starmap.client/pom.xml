<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>C3-Starmap_Cerberus</artifactId>
		<groupId>net.clanwolf.starmap</groupId>
		<version>5.1.7</version>
	</parent>

	<artifactId>net.clanwolf.starmap.client</artifactId>

	<name>net.clanwolf.starmap.client</name>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClass>net.clanwolf.starmap.client.gui.MainFrame</mainClass>
		<moduleName>net.clanwolf.starmap.client</moduleName>
	</properties>

	<dependencies>
		<dependency>
			<groupId>net.clanwolf.starmap</groupId>
			<artifactId>net.clanwolf.starmap.transfer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.clanwolf.starmap</groupId>
			<artifactId>net.clanwolf.starmap.logging</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.clanwolf.starmap</groupId>
			<artifactId>net.clanwolf.starmap.client.preloader</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.clanwolf.starmap</groupId>
			<artifactId>io.nadron.client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kynosarges</groupId>
			<artifactId>tektosyne</artifactId>
			<version>6.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.3</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${version.javafx}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${version.javafx}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${version.javafx}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${version.javafx}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>${version.javafx}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${version.javafx}</version>
		</dependency>
        <dependency>
            <groupId>net.clanwolf.starmap</groupId>
            <artifactId>net.clanwolf.starmap.server</artifactId>
            <version>5.1.7</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.spec.javax.transaction</groupId>
					<artifactId>jboss-transaction-api_1.2_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.30</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>RELEASE</version>
			<scope>compile</scope>
		</dependency>

		<!--		<dependency>-->
<!--			<groupId>de.dfki.mary</groupId>-->
<!--			<artifactId>voice-cmu-slt-hsmm</artifactId>-->
<!--			<version>5.2</version>-->
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.codehaus.groovy</groupId>-->
<!--					<artifactId>groovy-all</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.codehaus.groovy</groupId>-->
<!--			<artifactId>groovy-all</artifactId>-->
<!--			<version>3.0.7</version>-->
<!--			<type>pom</type>-->
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.apache.ant</groupId>-->
<!--					<artifactId>ant</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
<!--		</dependency>-->

	</dependencies>

	<!-- https://github.com/moditect/moditect#adding-module-descriptors-to-existing-jar-files -->

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.6.1</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven-compiler-plugin}</version>
				<configuration>
					<release>${version.java}</release>
					<source>${version.java}</source>
					<target>${version.java}</target>
					<!--<compilerArgs>-->
						<!--<compilerArg>&#45;&#45;module-path</compilerArg>-->
						<!--<compilerArg>${project.build.directory}/modules</compilerArg>-->
					<!--</compilerArgs>-->
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${version.asm}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${version.exec-maven-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${java.home}/bin/java</executable>
							<arguments>
								<argument>--module-path</argument>
								<argument>${project.build.directory}/modules</argument>
								<argument>--module</argument>
								<argument>${moduleName}/${mainClass}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<outputDirectory>${project.build.directory}/modules</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>1.0.0.Beta2</version>
				<executions>

				<!-- BEGIN: Generate module info for legacy jars-->

<!--					<execution>-->
<!--						<id>generate-module-info</id>-->
<!--						<phase>generate-sources</phase>-->
<!--						<goals>-->
<!--							<goal>generate-module-info</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<jdepsExtraArgs>-->
<!--								<arg>&#45;&#45;multi-release</arg>-->
<!--								<arg>9</arg>-->
<!--							</jdepsExtraArgs>-->
<!--							<modules>-->
<!--								<module>-->
<!--									<artifact>-->
<!--										<groupId>org.codehaus.groovy</groupId>-->
<!--										<artifactId>groovy-all</artifactId>-->
<!--										<version>2.4.5</version>-->
<!--									</artifact>-->
<!--&lt;!&ndash;									<additionalDependencies>&ndash;&gt;-->
<!--&lt;!&ndash;										<dependency>&ndash;&gt;-->
<!--&lt;!&ndash;											<groupId>org.jboss.marshalling</groupId>&ndash;&gt;-->
<!--&lt;!&ndash;											<artifactId>jboss-marshalling</artifactId>&ndash;&gt;-->
<!--&lt;!&ndash;											<version>2.0.6.Final</version>&ndash;&gt;-->
<!--&lt;!&ndash;										</dependency>&ndash;&gt;-->
<!--&lt;!&ndash;									</additionalDependencies>&ndash;&gt;-->
<!--								</module>-->
<!--							</modules>-->
<!--						</configuration>-->
<!--					</execution>-->

					<!-- END: Generate module info for legacy jars-->

					<execution>
						<id>add-module-infos</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<jdepsExtraArgs>
								<arg>--multi-release</arg>
								<arg>9</arg>
							</jdepsExtraArgs>
							<jvmVersion>${version.java}</jvmVersion>
							<overwriteExistingFiles>true</overwriteExistingFiles>

							<outputDirectory>${project.build.directory}/modules</outputDirectory>

							<modules>
								<module>
									<artifact>
										<groupId>com.ning</groupId>
										<artifactId>compress-lzf</artifactId>
										<version>1.0.4</version>
									</artifact>
									<moduleInfoSource>
										module compress.lzf {
											requires java.management;
											requires transitive jdk.unsupported;
											exports com.ning.compress;
											exports com.ning.compress.gzip;
											exports com.ning.compress.lzf;
											exports com.ning.compress.lzf.impl;
											exports com.ning.compress.lzf.parallel;
											exports com.ning.compress.lzf.util;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.jboss.modules</groupId>
										<artifactId>jboss-modules</artifactId>
										<version>1.10.2.Final</version>
									</artifact>
									<moduleInfoSource>
										module jboss.modules {
											requires java.management;
											requires java.prefs;
											requires transitive java.desktop;
											requires transitive java.instrument;
											requires transitive java.logging;
											requires transitive java.xml;
											exports __redirected;
											exports org.jboss.modules;
											exports org.jboss.modules._private;
											exports org.jboss.modules.filter;
											exports org.jboss.modules.log;
											exports org.jboss.modules.management;
											exports org.jboss.modules.maven;
											exports org.jboss.modules.ref;
											exports org.jboss.modules.security;
											exports org.jboss.modules.xml;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.spark-project.protobuf</groupId>
										<artifactId>protobuf-java</artifactId>
										<version>2.5.0-spark</version>
									</artifact>
									<moduleInfoSource>
										module protobuf.java {
											exports org.spark_project.protobuf;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.jboss.marshalling</groupId>
										<artifactId>jboss-marshalling</artifactId>
										<version>2.0.10.Final</version>
									</artifact>
									<moduleInfoSource>
										module jboss.marshalling {
											requires transitive jboss.modules;
											requires transitive jdk.unsupported;
											exports org.jboss.marshalling;
											exports org.jboss.marshalling._private;
											exports org.jboss.marshalling.cloner;
											exports org.jboss.marshalling.reflect;
											exports org.jboss.marshalling.util;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.google.protobuf.nano</groupId>
										<artifactId>protobuf-javanano</artifactId>
										<version>3.1.0</version>
									</artifact>
									<moduleInfoSource>
										module protobuf.javanano {
											exports com.google.protobuf.nano;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>net.jpountz.lz4</groupId>
										<artifactId>lz4</artifactId>
										<version>1.3.0</version>
									</artifact>
									<moduleInfoSource>
										module lz4 {
											requires jdk.unsupported;
											exports net.jpountz.lz4;
											exports net.jpountz.util;
											exports net.jpountz.xxhash;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.github.jponge</groupId>
										<artifactId>lzma-java</artifactId>
										<version>1.3</version>
									</artifact>
									<moduleInfoSource>
										module lzma.java {
											exports lzma.sdk;
											exports lzma.sdk.lz;
											exports lzma.sdk.lzma;
											exports lzma.sdk.rangecoder;
											exports lzma.streams;
											exports org.cservenak.streams;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.jcraft</groupId>
										<artifactId>jzlib</artifactId>
										<version>1.1.3</version>
									</artifact>
									<moduleInfoSource>
										module jzlib {
											exports com.jcraft.jzlib;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>javax.activation</groupId>
										<artifactId>activation</artifactId>
										<version>1.1</version>
									</artifact>
									<moduleInfoSource>
										module activation {
											requires java.logging;
											requires transitive java.datatransfer;
											requires transitive java.desktop;
											exports com.sun.activation.registries;
											exports com.sun.activation.viewers;
											exports javax.activation;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.kynosarges</groupId>
										<artifactId>tektosyne</artifactId>
										<version>6.2.0</version>
									</artifact>
									<moduleInfoSource>
										module tektosyne {
											exports org.kynosarges.tektosyne;
											exports org.kynosarges.tektosyne.geometry;
											exports org.kynosarges.tektosyne.graph;
											exports org.kynosarges.tektosyne.subdivision;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-net</groupId>
										<artifactId>commons-net</artifactId>
										<version>3.6</version>
									</artifact>
									<moduleInfoSource>
										module commons.net {
											exports org.apache.commons.net;
											exports org.apache.commons.net.bsd;
											exports org.apache.commons.net.chargen;
											exports org.apache.commons.net.daytime;
											exports org.apache.commons.net.discard;
											exports org.apache.commons.net.echo;
											exports org.apache.commons.net.finger;
											exports org.apache.commons.net.ftp;
											exports org.apache.commons.net.ftp.parser;
											exports org.apache.commons.net.imap;
											exports org.apache.commons.net.io;
											exports org.apache.commons.net.nntp;
											exports org.apache.commons.net.ntp;
											exports org.apache.commons.net.pop3;
											exports org.apache.commons.net.smtp;
											exports org.apache.commons.net.telnet;
											exports org.apache.commons.net.tftp;
											exports org.apache.commons.net.time;
											exports org.apache.commons.net.util;
											exports org.apache.commons.net.whois;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-collections4</artifactId>
										<version>4.3</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.collections4 {
											requires java.xml;
											exports org.apache.commons.collections4;
											exports org.apache.commons.collections4.bag;
											exports org.apache.commons.collections4.bidimap;
											exports org.apache.commons.collections4.collection;
											exports org.apache.commons.collections4.comparators;
											exports org.apache.commons.collections4.functors;
											exports org.apache.commons.collections4.iterators;
											exports org.apache.commons.collections4.keyvalue;
											exports org.apache.commons.collections4.list;
											exports org.apache.commons.collections4.map;
											exports org.apache.commons.collections4.multimap;
											exports org.apache.commons.collections4.multiset;
											exports org.apache.commons.collections4.properties;
											exports org.apache.commons.collections4.queue;
											exports org.apache.commons.collections4.sequence;
											exports org.apache.commons.collections4.set;
											exports org.apache.commons.collections4.splitmap;
											exports org.apache.commons.collections4.trie;
											exports org.apache.commons.collections4.trie.analyzer;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-databind</artifactId>
										<version>2.10.3</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.databind {
											requires java.desktop;
											requires java.logging;
											requires transitive com.fasterxml.jackson.core;
											requires transitive com.fasterxml.jackson.annotation;
											requires transitive java.sql;
											requires transitive java.xml;
											exports com.fasterxml.jackson.databind;
											exports com.fasterxml.jackson.databind.annotation;
											exports com.fasterxml.jackson.databind.cfg;
											exports com.fasterxml.jackson.databind.deser;
											exports com.fasterxml.jackson.databind.deser.impl;
											exports com.fasterxml.jackson.databind.deser.std;
											exports com.fasterxml.jackson.databind.exc;
											exports com.fasterxml.jackson.databind.ext;
											exports com.fasterxml.jackson.databind.introspect;
											exports com.fasterxml.jackson.databind.jsonFormatVisitors;
											exports com.fasterxml.jackson.databind.jsonschema;
											exports com.fasterxml.jackson.databind.jsontype;
											exports com.fasterxml.jackson.databind.jsontype.impl;
											exports com.fasterxml.jackson.databind.module;
											exports com.fasterxml.jackson.databind.node;
											exports com.fasterxml.jackson.databind.ser;
											exports com.fasterxml.jackson.databind.ser.impl;
											exports com.fasterxml.jackson.databind.ser.std;
											exports com.fasterxml.jackson.databind.type;
											exports com.fasterxml.jackson.databind.util;
											provides com.fasterxml.jackson.core.ObjectCodec with
											com.fasterxml.jackson.databind.ObjectMapper;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-core</artifactId>
										<version>2.10.3</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.core {
											exports com.fasterxml.jackson.core;
											exports com.fasterxml.jackson.core.async;
											exports com.fasterxml.jackson.core.base;
											exports com.fasterxml.jackson.core.filter;
											exports com.fasterxml.jackson.core.format;
											exports com.fasterxml.jackson.core.io;
											exports com.fasterxml.jackson.core.json;
											exports com.fasterxml.jackson.core.json.async;
											exports com.fasterxml.jackson.core.sym;
											exports com.fasterxml.jackson.core.type;
											exports com.fasterxml.jackson.core.util;
											provides com.fasterxml.jackson.core.JsonFactory with com.fasterxml.jackson.core.JsonFactory;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.voodoodyne.jackson.jsog</groupId>
										<artifactId>jackson-jsog</artifactId>
										<version>1.1.1</version>
									</artifact>
									<moduleInfoSource>
										module jackson.jsog {
											requires com.fasterxml.jackson.core;
											requires com.fasterxml.jackson.databind;
											requires com.fasterxml.jackson.annotation;
											exports com.voodoodyne.jackson.jsog;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-annotations</artifactId>
										<version>2.10.3</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.annotation {
											exports com.fasterxml.jackson.annotation;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-common</artifactId>
										<version>${version.netty}</version>
									</artifact>
<!--									<moduleInfo>-->
<!--										<name>io.netty.common</name>-->
<!--									</moduleInfo>-->
									<moduleInfoSource>
										module io.netty.common {
											requires static commons.logging;
											requires java.logging;
											requires static log4j;
											requires static log4j.api;
											requires static slf4j.api;
											requires jdk.unsupported;
											exports io.netty.util;
											exports io.netty.util.collection;
											exports io.netty.util.concurrent;
											exports io.netty.util.internal;
											exports io.netty.util.internal.logging;
											exports io.netty.util.internal.shaded.org.jctools.queues;
											exports io.netty.util.internal.shaded.org.jctools.queues.atomic;
											exports io.netty.util.internal.shaded.org.jctools.util;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-transport</artifactId>
										<version>${version.netty}</version>
									</artifact>
<!--									<moduleInfo>-->
<!--										<name>io.netty.transport</name>-->
<!--									</moduleInfo>-->
									<moduleInfoSource>
										module io.netty.transport {
											requires io.netty.buffer;
											requires io.netty.common;
											requires io.netty.resolver;
											exports io.netty.bootstrap;
											exports io.netty.channel;
											exports io.netty.channel.embedded;
											exports io.netty.channel.group;
											exports io.netty.channel.internal;
											exports io.netty.channel.local;
											exports io.netty.channel.nio;
											exports io.netty.channel.oio;
											exports io.netty.channel.pool;
											exports io.netty.channel.socket;
											exports io.netty.channel.socket.nio;
											exports io.netty.channel.socket.oio;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-buffer</artifactId>
										<version>${version.netty}</version>
									</artifact>
									<moduleInfoSource>
										module io.netty.buffer {
											requires io.netty.common;
											exports io.netty.buffer;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-codec</artifactId>
										<version>${version.netty}</version>
									</artifact>
<!--									<moduleInfo>-->
<!--										<name>io.netty.codec</name>-->
<!--									</moduleInfo>-->
									<moduleInfoSource>
										module io.netty.codec {
											requires compress.lzf;
											requires jzlib;
											requires lzma.java;
											requires transitive io.netty.buffer;
											requires transitive io.netty.common;
											requires transitive io.netty.transport;
											requires transitive jboss.marshalling;
											requires transitive lz4;
											requires transitive protobuf.java;
											requires transitive protobuf.javanano;
											exports io.netty.handler.codec;
											exports io.netty.handler.codec.base64;
											exports io.netty.handler.codec.bytes;
											exports io.netty.handler.codec.compression;
											exports io.netty.handler.codec.json;
											exports io.netty.handler.codec.marshalling;
											exports io.netty.handler.codec.protobuf;
											exports io.netty.handler.codec.serialization;
											exports io.netty.handler.codec.string;
											exports io.netty.handler.codec.xml;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-resolver</artifactId>
										<version>${version.netty}</version>
									</artifact>
									<moduleInfoSource>
										module io.netty.resolver {
											requires io.netty.common;
											exports io.netty.resolver;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>io.netty</groupId>
										<artifactId>netty-handler</artifactId>
										<version>${version.netty}</version>
									</artifact>
									<moduleInfoSource>
										module io.netty.handler {
											requires static alpn.api;
											requires static bcpkix.jdk15on;
											requires static bcprov.jdk15on;
											requires static conscrypt.openjdk.uber;
											requires static netty.tcnative;
											requires static npn.api;
											requires io.netty.buffer;
											requires io.netty.codec;
											requires io.netty.common;
											requires io.netty.transport;
											exports io.netty.handler.flow;
											exports io.netty.handler.flush;
											exports io.netty.handler.ipfilter;
											exports io.netty.handler.logging;
											exports io.netty.handler.ssl;
											exports io.netty.handler.ssl.ocsp;
											exports io.netty.handler.ssl.util;
											exports io.netty.handler.stream;
											exports io.netty.handler.timeout;
											exports io.netty.handler.traffic;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-fxml</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.fxmlEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-base</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.baseEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-media</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.mediaEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-controls</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.controlsEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-web</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.webEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-graphics</artifactId>
										<version>${version.javafx}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.graphicsEmpty {
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
					<execution>
						<id>create-runtime-image</id>
						<phase>package</phase>
						<goals>
							<goal>create-runtime-image</goal>
						</goals>
						<configuration>
							<modulePath>
								<path>${project.build.directory}/modules</path>
							</modulePath>
							<modules>
								<module>${moduleName}</module>
								<module>javafx.base</module>
								<module>javafx.controls</module>
								<module>javafx.graphics</module>
								<module>javafx.web</module>
								<module>javafx.media</module>
							</modules>
							<launcher>
								<name>C3-Starmap_Cerberus</name>
								<module>${moduleName}/${mainClass}</module>
							</launcher>
							<compression>2</compression>
							<stripDebug>true</stripDebug>
							<outputDirectory>${project.build.directory}/jlink-image</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/modules</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<!--<build>-->
	<!--<plugins>-->
	<!--<plugin>-->
	<!--<artifactId>maven-assembly-plugin</artifactId>-->
	<!--<version>3.1.1</version>-->
	<!--<configuration>-->
	<!--<finalName>C3-Starmap_Cerberus</finalName>-->
	<!--<appendAssemblyId>false</appendAssemblyId>-->
	<!--<descriptorRefs>-->
	<!--<descriptorRef>jar-with-dependencies</descriptorRef>-->
	<!--</descriptorRefs>-->
	<!--<archive>-->
	<!--<manifest>-->
	<!--<mainClass>net.clanwolf.starmap.client.gui.MainFrame</mainClass>-->
	<!--<packageName>C3-Starmap_Cerberus</packageName>-->
	<!--</manifest>-->
	<!--</archive>-->
	<!--</configuration>-->
	<!--<executions>-->
	<!--<execution>-->
	<!--<id>make-assembly</id>-->
	<!--<phase>package</phase>-->
	<!--<goals>-->
	<!--<goal>single</goal>-->
	<!--</goals>-->
	<!--</execution>-->
	<!--</executions>-->
	<!--</plugin>-->

	<!--<plugin>-->
	<!--<groupId>com.zenjava</groupId>-->
	<!--<artifactId>javafx-maven-plugin</artifactId>-->
	<!--<version>8.9.0-SNAPSHOT</version>-->
	<!--<configuration>-->
	<!--<mainClass>net.clanwolf.starmap.client.MainFrame</mainClass>-->
	<!--<preLoader>c3_preloader.net.clanwolf.starmap.client.preloader.C3_Preloader</preLoader>-->
	<!--<verbose>true</verbose>-->
	<!--<bundleArguments>-->
	<!--&lt;!&ndash; MSI installer Options &ndash;&gt;-->
	<!--&lt;!&ndash; https://docs.oracle.com/javase/9/tools/javapackager.htm#GUID-E51F9601-E121-4A50-BCA7-C7F8730078B2__WINDOWSEXEBUNDLERARGUMENTS-26C9A39C &ndash;&gt;-->
	<!--&lt;!&ndash; Custonmize MSI installer &ndash;&gt;-->
	<!--&lt;!&ndash; http://wixtoolset.org/documentation/manual/v3/wixui/wixui_customizations.html &ndash;&gt;-->
	<!--<icon>target/classes/icon.ico</icon>-->
	<!--<installdirChooser>true</installdirChooser>-->
	<!--<module-path>target/classes;C:/Program Files/Java/jdk-11.0.2/jmods</module-path>-->
	<!--<module>net.clanwolf.starmap.client/net.clanwolf.starmap.client.MainFrame</module>-->
	<!--<add-modules>java.base,java.datatransfer,java.desktop,java.scripting,java.xml,jdk.jsobject,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.dom,javafx.controls,javafx.fxml,java.naming,java.sql,jdk.charsets</add-modules>-->
	<!--&lt;!&ndash;<limit-modules>module1,module2,module3</limit-modules>&ndash;&gt;-->
	<!--&lt;!&ndash;<runtime /> Not working together with the above commands &ndash;&gt;-->
	<!--</bundleArguments>-->
	<!--&lt;!&ndash;<jfxMainAppJarName>${project.build.finalName}.jar</jfxMainAppJarName>&ndash;&gt;-->
	<!--<identifier>${project.artifactId}</identifier>-->
	<!--<vendor>ClanWolf.net</vendor>-->
	<!--&lt;!&ndash; win.app | linux.app | mac.app | exe | msi | rpm | deb &ndash;&gt;-->
	<!--<bundler>msi</bundler>-->
	<!--<nativeReleaseVersion>${project.version}</nativeReleaseVersion>-->
	<!--<needShortcut>true</needShortcut>-->
	<!--<needMenu>true</needMenu>-->
	<!--<appName>${project.artifactId}</appName>-->
	<!--<jvmArgs>-->
	<!--<jvmArg>-Xmx2g</jvmArg>-->
	<!--<jvmArg>-Djavafx.verbose=true</jvmArg>-->
	<!--<jvmArg>&#45;&#45;add-opens javafx.base/com.sun.javafx.reflect=ALL-UNNAMED</jvmArg>-->
	<!--</jvmArgs>-->
	<!--&lt;!&ndash;<jvmProperties>&ndash;&gt;-->
	<!--&lt;!&ndash;<UserProperty>foo</UserProperty>&ndash;&gt;-->
	<!--&lt;!&ndash;</jvmProperties>&ndash;&gt;-->
	<!--&lt;!&ndash;<userJvmArgs>&ndash;&gt;-->
	<!--&lt;!&ndash;<Argument3>...</Argument3>&ndash;&gt;-->
	<!--&lt;!&ndash;</userJvmArgs>&ndash;&gt;-->
	<!--&lt;!&ndash;<keyStoreAlias>example-user</keyStoreAlias>&ndash;&gt;-->
	<!--&lt;!&ndash;<keyStorePassword>example-password</keyStorePassword>&ndash;&gt;-->
	<!--<allPermissions>false</allPermissions>-->
	<!--<manifestAttributes>-->
	<!--<Specification-Title>${project.name}</Specification-Title>-->
	<!--<Specification-Version>${project.version}</Specification-Version>-->
	<!--<Specification-Vendor>${project.organization.name}</Specification-Vendor>-->
	<!--<Implementation-Title>${project.name}</Implementation-Title>-->
	<!--<Implementation-Version>${project.version}</Implementation-Version>-->
	<!--<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>-->
	<!--<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>-->
	<!--</manifestAttributes>-->
	<!--&lt;!&ndash;<additionalAppResources>env</additionalAppResources>&ndash;&gt;-->
	<!--&lt;!&ndash;<additionalBundlerResources>automatic</additionalBundlerResources>&ndash;&gt;-->
	<!--</configuration>-->
	<!--<executions>-->
	<!--<execution>-->
	<!--<id>create-jfxjar</id>-->
	<!--<phase>package</phase>-->
	<!--<goals>-->
	<!--<goal>build-jar</goal>-->
	<!--</goals>-->
	<!--</execution>-->
	<!--&lt;!&ndash;<execution>&ndash;&gt;-->
	<!--&lt;!&ndash;<id>create-native</id>&ndash;&gt;-->
	<!--&lt;!&ndash;<phase>package</phase>&ndash;&gt;-->
	<!--&lt;!&ndash;<goals>&ndash;&gt;-->
	<!--&lt;!&ndash;<goal>build-native</goal>&ndash;&gt;-->
	<!--&lt;!&ndash;</goals>&ndash;&gt;-->
	<!--&lt;!&ndash;</execution>&ndash;&gt;-->
	<!--</executions>-->
	<!--</plugin>-->
	<!--</plugins>-->
	<!--</build>-->

</project>
