<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.clanwolf.starmap</groupId>
    <artifactId>C3-Starmap_Cerberus</artifactId>
    <version>7.3.79</version>
  </parent>
  <groupId>net.clanwolf.starmap</groupId>
  <artifactId>net.clanwolf.starmap.client</artifactId>
  <version>7.3.79</version>
  <name>net.clanwolf.starmap.client</name>
  <properties>
    <mainClass>net.clanwolf.starmap.client.gui.MainFrame</mainClass>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <moduleName>net.clanwolf.starmap.client</moduleName>
  </properties>
  <dependencies>
    <dependency>
      <groupId>net.clanwolf.starmap</groupId>
      <artifactId>net.clanwolf.starmap.transfer</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.clanwolf.starmap</groupId>
      <artifactId>net.clanwolf.starmap.logging</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.clanwolf.starmap</groupId>
      <artifactId>net.clanwolf.starmap.client.preloader</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>net.clanwolf.starmap</groupId>
      <artifactId>io.nadron.client</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${version.javafx}</version>
    </dependency>
    <dependency>
      <groupId>org.kynosarges</groupId>
      <artifactId>tektosyne</artifactId>
      <version>${version.tektosyne}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${version.apache.commons-collections4}</version>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>${version.apache.commons-net}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>${version.jetbrains-annotations}</version>
    </dependency>
    <dependency>
      <groupId>org.jitsi</groupId>
      <artifactId>irc-api</artifactId>
      <version>${version.irc-api}</version>
    </dependency>
    <dependency>
      <groupId>net.coobird</groupId>
      <artifactId>thumbnailator</artifactId>
      <version>${version.thumbnailator}</version>
    </dependency>
    <dependency>
      <groupId>com.github.kwhat</groupId>
      <artifactId>jnativehook</artifactId>
      <version>${version.jnativehook}</version>
    </dependency>
  </dependencies>
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.1</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/version.number</include>
          <include>**/c3.properties</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/version.number</exclude>
          <exclude>**/c3.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${version.maven-antrun-plugin}</version>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>Copying manuals...</echo>
                <echo>C3_Manual_de.pdf</echo>
                <copy file="../doc/manual/C3_Manual_de.pdf" tofile="${basedir}/src/main/resources/C3_Manual_de.pdf" />
                <echo>changelog.txt</echo>
                <copy file="../doc/changelog.txt" tofile="${basedir}/src/main/resources/changelog.txt" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler-plugin}</version>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>${version.asm}</version>
          </dependency>
        </dependencies>
        <configuration>
          <release>${version.java}</release>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <source>${version.java}</source>
          <target>${version.java}</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${version.maven-resources-plugin}</version>
        <configuration>
          <propertiesEncoding>UTF-8</propertiesEncoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.maven-dependency-plugin}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/modules</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${version.exec-maven-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${java.home}/bin/java</executable>
              <arguments>
                <argument>--module-path</argument>
                <argument>${project.build.directory}/modules</argument>
                <argument>--module</argument>
                <argument>${moduleName}/${mainClass}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.maven-jar-plugin}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/modules</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <version>${version.moditect-maven-plugin}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>add-module-infos</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <configuration>
              <jdepsExtraArgs>
                <arg>--multi-release</arg>
                <arg>9</arg>
              </jdepsExtraArgs>
              <jvmVersion>${version.java}</jvmVersion>
              <overwriteExistingFiles>true</overwriteExistingFiles>
              <outputDirectory>${project.build.directory}/modules</outputDirectory>
              <modules>
                <module>
                  <artifact>
                    <groupId>com.ning</groupId>
                    <artifactId>compress-lzf</artifactId>
                    <version>1.0.4</version>
                  </artifact>
                  <moduleInfoSource>module compress.lzf {
											requires java.management;
											requires transitive jdk.unsupported;
											exports com.ning.compress;
											exports com.ning.compress.gzip;
											exports com.ning.compress.lzf;
											exports com.ning.compress.lzf.impl;
											exports com.ning.compress.lzf.parallel;
											exports com.ning.compress.lzf.util;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>net.coobird</groupId>
                    <artifactId>thumbnailator</artifactId>
                    <version>0.4.19</version>
                  </artifact>
                  <moduleInfoSource>module net.coobird.thumbnailator {
											requires java.xml;
											requires transitive java.desktop;
											exports net.coobird.thumbnailator;
											exports net.coobird.thumbnailator.builders;
											exports net.coobird.thumbnailator.filters;
											exports net.coobird.thumbnailator.geometry;
											exports net.coobird.thumbnailator.makers;
											exports net.coobird.thumbnailator.name;
											exports net.coobird.thumbnailator.resizers;
											exports net.coobird.thumbnailator.resizers.configurations;
											exports net.coobird.thumbnailator.tasks;
											exports net.coobird.thumbnailator.tasks.io;
											exports net.coobird.thumbnailator.util;
											exports net.coobird.thumbnailator.util.exif;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.jitsi</groupId>
                    <artifactId>irc-api</artifactId>
                    <version>1.0-0015-jitsi-1</version>
                  </artifact>
                  <moduleInfoSource>module irc.api {
											requires org.slf4j;

											exports com.ircclouds.irc.api;
											exports com.ircclouds.irc.api.commands;
											exports com.ircclouds.irc.api.comms;
											exports com.ircclouds.irc.api.ctcp;
											exports com.ircclouds.irc.api.domain;
											exports com.ircclouds.irc.api.domain.messages;
											exports com.ircclouds.irc.api.domain.messages.interfaces;
											exports com.ircclouds.irc.api.filters;
											exports com.ircclouds.irc.api.listeners;
											exports com.ircclouds.irc.api.om;
											exports com.ircclouds.irc.api.state;
											exports com.ircclouds.irc.api.utils;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.jboss.modules</groupId>
                    <artifactId>jboss-modules</artifactId>
                    <version>1.10.2.Final</version>
                  </artifact>
                  <moduleInfoSource>module jboss.modules {
											requires java.management;
											requires java.prefs;
											requires transitive java.desktop;
											requires transitive java.instrument;
											requires transitive java.logging;
											requires transitive java.xml;
											exports __redirected;
											exports org.jboss.modules;
											exports org.jboss.modules._private;
											exports org.jboss.modules.filter;
											exports org.jboss.modules.log;
											exports org.jboss.modules.management;
											exports org.jboss.modules.maven;
											exports org.jboss.modules.ref;
											exports org.jboss.modules.security;
											exports org.jboss.modules.xml;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.spark-project.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                    <version>2.5.0-spark</version>
                  </artifact>
                  <moduleInfoSource>module protobuf.java {
											exports org.spark_project.protobuf;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.jboss.marshalling</groupId>
                    <artifactId>jboss-marshalling</artifactId>
                    <version>2.0.10.Final</version>
                  </artifact>
                  <moduleInfoSource>module jboss.marshalling {
											requires transitive jboss.modules;
											requires transitive jdk.unsupported;
											exports org.jboss.marshalling;
											exports org.jboss.marshalling._private;
											exports org.jboss.marshalling.cloner;
											exports org.jboss.marshalling.reflect;
											exports org.jboss.marshalling.util;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>com.google.protobuf.nano</groupId>
                    <artifactId>protobuf-javanano</artifactId>
                    <version>3.1.0</version>
                  </artifact>
                  <moduleInfoSource>module protobuf.javanano {
											exports com.google.protobuf.nano;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>net.jpountz.lz4</groupId>
                    <artifactId>lz4</artifactId>
                    <version>1.3.0</version>
                  </artifact>
                  <moduleInfoSource>module lz4 {
											requires jdk.unsupported;
											exports net.jpountz.lz4;
											exports net.jpountz.util;
											exports net.jpountz.xxhash;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>com.github.jponge</groupId>
                    <artifactId>lzma-java</artifactId>
                    <version>1.3</version>
                  </artifact>
                  <moduleInfoSource>module lzma.java {
											exports lzma.sdk;
											exports lzma.sdk.lz;
											exports lzma.sdk.lzma;
											exports lzma.sdk.rangecoder;
											exports lzma.streams;
											exports org.cservenak.streams;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>com.jcraft</groupId>
                    <artifactId>jzlib</artifactId>
                    <version>1.1.3</version>
                  </artifact>
                  <moduleInfoSource>module jzlib {
											exports com.jcraft.jzlib;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                    <version>1.1</version>
                  </artifact>
                  <moduleInfoSource>module activation {
											requires java.logging;
											requires transitive java.datatransfer;
											requires transitive java.desktop;
											exports com.sun.activation.registries;
											exports com.sun.activation.viewers;
											exports javax.activation;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.kynosarges</groupId>
                    <artifactId>tektosyne</artifactId>
                    <version>6.2.0</version>
                  </artifact>
                  <moduleInfoSource>module tektosyne {
											exports org.kynosarges.tektosyne;
											exports org.kynosarges.tektosyne.geometry;
											exports org.kynosarges.tektosyne.graph;
											exports org.kynosarges.tektosyne.subdivision;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>commons-net</groupId>
                    <artifactId>commons-net</artifactId>
                    <version>3.9.0</version>
                  </artifact>
                  <moduleInfoSource>module org.apache.commons.net {
											exports org.apache.commons.net;
											exports org.apache.commons.net.bsd;
											exports org.apache.commons.net.chargen;
											exports org.apache.commons.net.daytime;
											exports org.apache.commons.net.discard;
											exports org.apache.commons.net.echo;
											exports org.apache.commons.net.finger;
											exports org.apache.commons.net.ftp;
											exports org.apache.commons.net.ftp.parser;
											exports org.apache.commons.net.imap;
											exports org.apache.commons.net.io;
											exports org.apache.commons.net.nntp;
											exports org.apache.commons.net.ntp;
											exports org.apache.commons.net.pop3;
											exports org.apache.commons.net.smtp;
											exports org.apache.commons.net.telnet;
											exports org.apache.commons.net.tftp;
											exports org.apache.commons.net.time;
											exports org.apache.commons.net.util;
											exports org.apache.commons.net.whois;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-collections4</artifactId>
                    <version>4.4</version>
                  </artifact>
                  <moduleInfoSource>module org.apache.commons.collections4 {
											requires java.xml;
											exports org.apache.commons.collections4;
											exports org.apache.commons.collections4.bag;
											exports org.apache.commons.collections4.bidimap;
											exports org.apache.commons.collections4.collection;
											exports org.apache.commons.collections4.comparators;
											exports org.apache.commons.collections4.functors;
											exports org.apache.commons.collections4.iterators;
											exports org.apache.commons.collections4.keyvalue;
											exports org.apache.commons.collections4.list;
											exports org.apache.commons.collections4.map;
											exports org.apache.commons.collections4.multimap;
											exports org.apache.commons.collections4.multiset;
											exports org.apache.commons.collections4.properties;
											exports org.apache.commons.collections4.queue;
											exports org.apache.commons.collections4.sequence;
											exports org.apache.commons.collections4.set;
											exports org.apache.commons.collections4.splitmap;
											exports org.apache.commons.collections4.trie;
											exports org.apache.commons.collections4.trie.analyzer;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>com.voodoodyne.jackson.jsog</groupId>
                    <artifactId>jackson-jsog</artifactId>
                    <version>1.1.2</version>
                  </artifact>
                  <moduleInfoSource>module jackson.jsog {
											requires com.fasterxml.jackson.core;
											requires com.fasterxml.jackson.databind;
											requires com.fasterxml.jackson.annotation;
											exports com.voodoodyne.jackson.jsog;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-common</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.common {
											requires static commons.logging;
											requires java.logging;
											requires static log4j;
											requires static log4j.api;
											requires static slf4j.api;
											requires jdk.unsupported;
											exports io.netty.util;
											exports io.netty.util.collection;
											exports io.netty.util.concurrent;
											exports io.netty.util.internal;
											exports io.netty.util.internal.logging;
											exports io.netty.util.internal.shaded.org.jctools.queues;
											exports io.netty.util.internal.shaded.org.jctools.queues.atomic;
											exports io.netty.util.internal.shaded.org.jctools.util;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.transport {
											requires io.netty.buffer;
											requires io.netty.common;
											requires io.netty.resolver;
											exports io.netty.bootstrap;
											exports io.netty.channel;
											exports io.netty.channel.embedded;
											exports io.netty.channel.group;
											exports io.netty.channel.internal;
											exports io.netty.channel.local;
											exports io.netty.channel.nio;
											exports io.netty.channel.oio;
											exports io.netty.channel.pool;
											exports io.netty.channel.socket;
											exports io.netty.channel.socket.nio;
											exports io.netty.channel.socket.oio;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-buffer</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.buffer {
											requires io.netty.common;
											exports io.netty.buffer;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.codec {
											requires compress.lzf;
											requires jzlib;
											requires lzma.java;
											requires transitive io.netty.buffer;
											requires transitive io.netty.common;
											requires transitive io.netty.transport;
											requires transitive jboss.marshalling;
											requires transitive lz4;
											requires transitive protobuf.java;
											requires transitive protobuf.javanano;
											exports io.netty.handler.codec;
											exports io.netty.handler.codec.base64;
											exports io.netty.handler.codec.bytes;
											exports io.netty.handler.codec.compression;
											exports io.netty.handler.codec.json;
											exports io.netty.handler.codec.marshalling;
											exports io.netty.handler.codec.protobuf;
											exports io.netty.handler.codec.serialization;
											exports io.netty.handler.codec.string;
											exports io.netty.handler.codec.xml;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-resolver</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.resolver {
											requires io.netty.common;
											exports io.netty.resolver;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-handler</artifactId>
                    <version>4.1.94.Final</version>
                  </artifact>
                  <moduleInfoSource>module io.netty.handler {
											requires static alpn.api;
											requires static bcpkix.jdk15on;
											requires static bcprov.jdk15on;
											requires static conscrypt.openjdk.uber;
											requires static netty.tcnative;
											requires static npn.api;
											requires io.netty.buffer;
											requires io.netty.codec;
											requires io.netty.common;
											requires io.netty.transport;
											exports io.netty.handler.flow;
											exports io.netty.handler.flush;
											exports io.netty.handler.ipfilter;
											exports io.netty.handler.logging;
											exports io.netty.handler.ssl;
											exports io.netty.handler.ssl.ocsp;
											exports io.netty.handler.ssl.util;
											exports io.netty.handler.stream;
											exports io.netty.handler.timeout;
											exports io.netty.handler.traffic;
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-fxml</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.fxmlEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.baseEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-media</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.mediaEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.controlsEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.webEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.graphicsEmpty {
										}</moduleInfoSource>
                </module>
                <module>
                  <artifact>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>${version.javafx}</version>
                  </artifact>
                  <moduleInfoSource>module javafx.swingEmpty {
										}</moduleInfoSource>
                </module>
              </modules>
            </configuration>
          </execution>
          <execution>
            <id>create-runtime-image</id>
            <phase>package</phase>
            <goals>
              <goal>create-runtime-image</goal>
            </goals>
            <configuration>
              <modulePath>
                <path>${project.build.directory}/modules</path>
              </modulePath>
              <modules>
                <module>${moduleName}</module>
                <module>javafx.base</module>
                <module>javafx.controls</module>
                <module>javafx.graphics</module>
                <module>javafx.web</module>
                <module>javafx.media</module>
              </modules>
              <launcher>
                <name>C3-Starmap_Cerberus</name>
                <module>${moduleName}/${mainClass}</module>
              </launcher>
              <compression>2</compression>
              <jarInclusionPolicy>NONE</jarInclusionPolicy>
              <ignoreSigningInformation>true</ignoreSigningInformation>
              <stripDebug>true</stripDebug>
              <outputDirectory>${project.build.directory}/jlink-image</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
