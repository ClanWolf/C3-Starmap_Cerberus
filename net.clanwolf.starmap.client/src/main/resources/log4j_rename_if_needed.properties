# irc library uses log4j
log4j.rootLogger=DEBUG, stdout
#stderr

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Direct log messages to stderr
#log4j.appender.stderr=org.apache.log4j.ConsoleAppender
#log4j.appender.stderr.Target=System.out
#log4j.appender.stderr.layout=org.apache.log4j.PatternLayout

# Separate appender for log4j so that not stdout needs to be redirected
# log4j.rootLogger=INFO, stdout
# log4j.appender.stdout=net.clanwolf.starmap.server.logging.C3AppenderLog4j

# -------------------------------------------------------------------

# ALL Level
# This log4j level is used to turn on all levels of logging. Once this is configured and the levels are not
# considered.

# TRACE Level
# This log4j level gives more detailed information than the DEBUG level and sits top of the hierarchy. This level
# is introduced from version 1.2.12 in log4j.

# DEBUG Level
# This log4j level helps developer to debug application. Level of message logged will be focused on providing
# support to a application developer.

# INFO Level
# This log4j level gives the progress and chosen state information. This level will be generally useful for end
# user. This level is one level higher than DEBUG.

# WARN Level
# This log4j level gives a warning about an unexpected event to the user. The messages coming out of this level
# may not halt the progress of the system.

# ERROR Level
# This log4j level gives information about a serious error which needs to be addressed and may result in unstable
# state. This level is one level higher than WARN.

# FATAL Level
# This log4j level is straightforward and you do not get it quite often. Once you get this level and it indicates
# application death.

# OFF Level
# This log4j level is opposite to ALL level. It turns off all the logging.
