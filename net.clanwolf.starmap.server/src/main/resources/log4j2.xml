<?xml version="1.0" encoding="UTF-8"?>

<Configuration xmlns:xi="http://www.w3.org/2001/XInclude"
               status="debug" strict="true" name="C3Config"
               packages="net.clanwolf.starmap.server.logging"
>
	<Appenders>
		<C3AppenderLog4j name="C3AppenderLog4j">
			<Layout type="PatternLayout">
				<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
			</Layout>
		</C3AppenderLog4j>
	</Appenders>
	<Loggers>
		<Root level="debug">
			<AppenderRef ref="C3AppenderLog4j" />
		</Root>
	</Loggers>
</Configuration>

<!--
log4j.properties (old):

		log4j.rootLogger=INFO, stdout
		log4j.appender.stdout=net.clanwolf.starmap.server.logging.C3AppenderLog4j

		log4j.logger.org.hibernate=off
		log4j.logger.org.hibernate.SQL=off
		log4j.logger.org.hibernate.type.descriptor.sql=off

# ALL Level
# This log4j level is used to turn on all levels of logging. Once this is configured and the levels are not
# considered.

# TRACE Level
# This log4j level gives more detailed information than the DEBUG level and sits top of the hierarchy. This level
# is introduced from version 1.2.12 in log4j.

# DEBUG Level
# This log4j level helps developer to debug application. Level of message logged will be focused on providing
# support to a application developer.

# INFO Level
# This log4j level gives the progress and chosen state information. This level will be generally useful for end
# user. This level is one level higher than DEBUG.

# WARN Level
# This log4j level gives a warning about an unexpected event to the user. The messages coming out of this level
# may not halt the progress of the system.

# ERROR Level
# This log4j level gives information about a serious error which needs to be addressed and may result in unstable
# state. This level is one level higher than WARN.

# FATAL Level
# This log4j level is straightforward and you do not get it quite often. Once you get this level and it indicates
# application death.

# OFF Level
# This log4j level is opposite to ALL level. It turns off all the logging.
-->
